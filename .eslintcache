[{"F:\\InnoventX\\Website\\portal\\src\\index.js":"1","F:\\InnoventX\\Website\\portal\\src\\reportWebVitals.js":"2","F:\\InnoventX\\Website\\portal\\src\\App.js":"3","F:\\InnoventX\\Website\\portal\\src\\shared\\components\\PortalNavbar.jsx":"4","F:\\InnoventX\\Website\\portal\\src\\user\\components\\SignIn.jsx":"5","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\questions.js":"6","F:\\InnoventX\\Website\\portal\\src\\portal home\\pages\\PortalHome.jsx":"7","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\QuesPage.js":"8","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\Question.js":"9","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\QuesList.js":"10","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\UserQuestions.js":"11","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\NewQuestion.js":"12","F:\\InnoventX\\Website\\portal\\src\\shared\\components\\Input.js":"13","F:\\InnoventX\\Website\\portal\\src\\shared\\components\\validators.js":"14","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\CatQuestions.js":"15","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\Categories.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1325,"mtime":1608318227856,"results":"20","hashOfConfig":"18"},{"size":3143,"mtime":1608278435971,"results":"21","hashOfConfig":"18"},{"size":1860,"mtime":1608188092823,"results":"22","hashOfConfig":"18"},{"size":3490,"mtime":1608296018865,"results":"23","hashOfConfig":"18"},{"size":675,"mtime":1608295920217,"results":"24","hashOfConfig":"18"},{"size":3492,"mtime":1608359444122,"results":"25","hashOfConfig":"18"},{"size":807,"mtime":1608354849269,"results":"26","hashOfConfig":"18"},{"size":832,"mtime":1608354849157,"results":"27","hashOfConfig":"18"},{"size":301,"mtime":1608300232828,"results":"28","hashOfConfig":"18"},{"size":2837,"mtime":1608317470638,"results":"29","hashOfConfig":"18"},{"size":2072,"mtime":1608355395137,"results":"30","hashOfConfig":"18"},{"size":1710,"mtime":1608301980207,"results":"31","hashOfConfig":"18"},{"size":824,"mtime":1608359346061,"results":"32","hashOfConfig":"18"},{"size":744,"mtime":1608354974121,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"rpkf1n",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\InnoventX\\Website\\portal\\src\\index.js",[],["73","74"],"F:\\InnoventX\\Website\\portal\\src\\reportWebVitals.js",[],"F:\\InnoventX\\Website\\portal\\src\\App.js",["75"],"import React from 'react';\nimport { BrowserRouter as Router, Switch , Route, Redirect} from 'react-router-dom';\n\nimport './App.css';\nimport SignIn from \"./user/components/SignIn\";\nimport PortalNavbar from './shared/components/PortalNavbar';\nimport PortalHome from \"./portal home/pages/PortalHome\";\nimport QuesPage from \"./portal home/components/QuesPage\";\nimport CatQuestions from \"./portal home/components/CatQuestions\";\nimport UserQuestions from \"./portal home/components/UserQuestions\";\nimport NewQuestion from \"./portal home/components/NewQuestion\";\n\nfunction App() {\n  return (\n    <Router>\n      <main>\n        <PortalNavbar />\n        <Switch>\n\n          <Route path=\"/\" exact>\n            <PortalHome />\n          </Route>\n\n          <Route path=\"/authenticate\" exact>      \n            <SignIn />\n          </Route>\n\n          <Route path = \"/question/new\" exact>\n            <NewQuestion />\n          </Route>\n\n          <Route path=\"/ques/:quesID\" exact>\n            <QuesPage />\n          </Route>\n\n          <Router path=\"/questions/:catID\" exact>\n            <CatQuestions />\n          </Router>\n\n          {/* <Router path=\"/questions/:userId\" exact>\n            <UserQuestions />\n          </Router> */}\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","F:\\InnoventX\\Website\\portal\\src\\shared\\components\\PortalNavbar.jsx",["76","77"],"import React,{useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport logo from '../../photos/logo.png';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport \"./PortalNavbar.css\";\r\n\r\nfunction PortalNavbar(){\r\n\r\n    const [search,setSearch] = useState(\"\");\r\n\r\n    function handleSearch(event){\r\n        const ipValue = event.target.value;\r\n        setSearch(ipValue);\r\n    }\r\n\r\n    function handleClick(){\r\n        alert(\"Search: \" + search);\r\n        setSearch(\"\");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n                <a className=\"navbar-brand\" href=\"#\"><img className=\"logo\" src={logo} />InnoventX</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/question\" className=\"nav-link\" style={{color:\"white\"}}>Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <div className=\"portal-div\">\r\n                                <NavLink to=\"/signin\" className=\"nav-link\"><p className=\"portal-link\">Login</p></NavLink>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/:userid/question\" className=\"nav-link\" style={{color:\"white\"}}>My Ques</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <form className=\"form-inline my-2 my-lg-0\">\r\n                                <div className=\"button-in\">\r\n                                    <input  className=\"search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={search} onChange={handleSearch}/>\r\n                                    <button className=\"search-btn\" onClick={handleClick}><SearchIcon style={{color:\"white\"}}/></button>\r\n                                </div>\r\n                            </form>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/question/new\">\r\n                                <button className=\"ask-div\">ASK</button>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/\" className=\"nav-link\"><AccountCircleIcon style={{color:\"#4CD9D9\",fontSize:\"2.3rem\",marginLeft:\"0\"}} /></NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PortalNavbar;\r\n\r\n","F:\\InnoventX\\Website\\portal\\src\\user\\components\\SignIn.jsx",["78","79","80"],"import React,{useState} from 'react';\r\nimport logo from '../../photos/logo.png';\r\nimport './SignIn.css';\r\n\r\nfunction SignIn(){\r\n\r\n    const [signIn,setSignIn] = useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    });\r\n\r\n    function handleSignIn(event){\r\n        const ipName = event.target.name;\r\n        const ipValue = event.target.value;\r\n    \r\n        setSignIn((prevsValue) => {\r\n            if(ipName === \"Email\"){\r\n                return{\r\n                    email:ipValue,\r\n                    password:prevsValue.password\r\n                }\r\n            }else if(ipName === \"Password\"){\r\n                return{\r\n                    email:prevsValue.email,\r\n                    password:ipValue\r\n                }\r\n            }\r\n        })\r\n    \r\n    }\r\n    \r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        alert(\"Email address is: \"+signIn.email+\" And password is: \"+signIn.password);\r\n        console.log(\"Email address is: \"+signIn.email+\" And password is: \"+signIn.password); \r\n    }\r\n    \r\n    return(\r\n        <div className=\"my-form\">\r\n            <img className=\"logo2\" src={logo}/>\r\n            <form onSubmit={handleSubmit}>\r\n                <input className=\"sign-in\" name=\"Email\" type=\"email\" placeholder=\"Email\" autoComplete=\"off\" value={signIn.email} onChange={handleSignIn}/>\r\n                <input className=\"sign-in\" name=\"Password\" type=\"password\" placeholder=\"Password\" autoComplete=\"off\" value={signIn.password} onChange={handleSignIn}/>\r\n                <button className=\"signup-button\" type=\"submit\">Sign In</button>\r\n                <a className=\"forgot-password\"href=\"#\">Forgot password?</a>\r\n                <label className=\"moveto-signup\">Don't have an account?</label>\r\n                <a href=\"#\">Sign up</a>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SignIn; ","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\questions.js",[],"F:\\InnoventX\\Website\\portal\\src\\portal home\\pages\\PortalHome.jsx",["81","82"],"import React,{useState} from 'react';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport myQues from \"../components/questions\";\r\nimport \"./PortalHome.css\";\r\nimport Categories from \"../components/Categories\";\r\nimport QuesList from \"../components/QuesList\";\r\n\r\nfunction PortalHome(){\r\n\r\n    const [myQuestions,setQuestions] = useState(myQues)\r\n    \r\n    return(\r\n        <div className=\"home\">\r\n            <div className=\"left\">\r\n                <Categories />\r\n            </div>\r\n            <div className=\"right\">\r\n                <QuesList allQuestions={myQuestions} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PortalHome;","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\QuesPage.js",[],"F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\Question.js",["83"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport \"./Question.css\";\r\n\r\n\r\nconst Question = (props) => {\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Link to={`/ques/${props.id}`} style={{textDecoration:\"none\"}}>\r\n                <div className=\"question-container\">\r\n                    <AccountCircleIcon className=\"user-icon\" style={{fontSize:\"1.8rem\"}}/>\r\n                    <h6 className=\"student-name\">{props.studentName}</h6>\r\n                    <h4 className=\"question-title\">{props.title}</h4>\r\n                    <p>{props.wholeQuestion.substring(0,100) + '...'}</p>\r\n                </div>\r\n            </Link>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default Question;","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\QuesList.js",[],"F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\UserQuestions.js",["84"],"import React,{useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst UserQuestions = () => {\r\n    const userID = useParams().userId;\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <h1>{userID}</h1>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UserQuestions;","F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\NewQuestion.js",[],"F:\\InnoventX\\Website\\portal\\src\\shared\\components\\Input.js",["85"],"F:\\InnoventX\\Website\\portal\\src\\shared\\components\\validators.js",[],"F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\CatQuestions.js",[],"F:\\InnoventX\\Website\\portal\\src\\portal home\\components\\Categories.js",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":10,"column":8,"nodeType":"93","messageId":"94","endLine":10,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":26,"column":17,"nodeType":"97","endLine":26,"endColumn":54},{"ruleId":"98","severity":1,"message":"99","line":26,"column":54,"nodeType":"97","endLine":26,"endColumn":89},{"ruleId":"98","severity":1,"message":"99","line":40,"column":13,"nodeType":"97","endLine":40,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":45,"column":17,"nodeType":"97","endLine":45,"endColumn":56},{"ruleId":"95","severity":1,"message":"96","line":47,"column":17,"nodeType":"97","endLine":47,"endColumn":29},{"ruleId":"91","severity":1,"message":"100","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":25},{"ruleId":"91","severity":1,"message":"101","line":11,"column":24,"nodeType":"93","messageId":"94","endLine":11,"endColumn":36},{"ruleId":"91","severity":1,"message":"102","line":1,"column":15,"nodeType":"93","messageId":"94","endLine":1,"endColumn":23},{"ruleId":"91","severity":1,"message":"102","line":1,"column":15,"nodeType":"93","messageId":"94","endLine":1,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":52,"column":7,"nodeType":"105","endLine":52,"endColumn":25,"suggestions":"106"},{"ruleId":"91","severity":1,"message":"107","line":7,"column":23,"nodeType":"93","messageId":"94","endLine":7,"endColumn":36},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'UserQuestions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'AccountCircleIcon' is defined but never used.","'setQuestions' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onInput'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'setCategorite' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [id, value, isValid, onInput]",{"range":"113","text":"114"},[1193,1211],"[id, value, isValid, onInput]"]